name: Build and Test Container Image

on:
  push:
    branches:
      - main
      - develop
      - "feature/**"
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

env:
  IMAGE_REGISTRY: localhost/tmatwood
  IMAGE_NAME: wsl-ubuntu-24.04

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for GitVersion

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v4.1.0
        with:
          versionSpec: "6.x"

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v4.1.0
        with:
          configFilePath: GitVersion.yml

      - name: Display GitVersion outputs
        run: |
          echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
          echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"
          echo "BranchName: ${{ steps.gitversion.outputs.branchName }}"

      - name: Install Homebrew
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          echo "/home/linuxbrew/.linuxbrew/bin" >> $GITHUB_PATH

      - name: Install container-structure-test
        run: |
          brew install container-structure-test
          container-structure-test version

      - name: Build container image
        env:
          VERSION: ${{ steps.gitversion.outputs.semVer }}
          BUILD_DATE: ${{ steps.gitversion.outputs.commitDate }}
        run: |
          echo "Building image: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${VERSION}"
          docker build \
            --build-arg BUILD_DATE="${BUILD_DATE}" \
            --build-arg VERSION="${VERSION}" \
            -t "${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${VERSION}" \
            -t "${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:latest" \
            .

      - name: List built images
        run: docker images | grep ${{ env.IMAGE_NAME }}

      - name: Run container structure tests
        env:
          VERSION: ${{ steps.gitversion.outputs.semVer }}
        run: |
          echo "Testing image: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${VERSION}"
          container-structure-test test \
            --image "${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${VERSION}" \
            --config tests.yaml

      - name: Test results summary
        if: always()
        run: |
          if [ $? -eq 0 ]; then
            echo "✅ All tests passed!"
          else
            echo "❌ Tests failed!"
            exit 1
          fi

      - name: Save image as artifact (optional)
        if: github.ref == 'refs/heads/main'
        run: |
          VERSION="${{ steps.gitversion.outputs.semVer }}"
          docker save "${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${VERSION}" | gzip > ${{ env.IMAGE_NAME }}-${VERSION}.tar.gz

      - name: Upload image artifact
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.IMAGE_NAME }}-${{ steps.gitversion.outputs.semVer }}
          path: ${{ env.IMAGE_NAME }}-*.tar.gz
          retention-days: 7

      - name: Login to GitHub Container Registry
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag images for GHCR
        if: github.ref == 'refs/heads/main'
        env:
          VERSION: ${{ steps.gitversion.outputs.semVer }}
        run: |
          docker tag "${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${VERSION}" "ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${VERSION}"
          docker tag "${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:latest" "ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest"

      - name: Push to GitHub Container Registry
        if: github.ref == 'refs/heads/main'
        env:
          VERSION: ${{ steps.gitversion.outputs.semVer }}
        run: |
          echo "Pushing to ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${VERSION}"
          docker push "ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${VERSION}"
          docker push "ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest"
          echo "✅ Image published to GitHub Container Registry!"
          echo "📦 Pull with: docker pull ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${VERSION}"
